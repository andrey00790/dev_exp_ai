# AI Assistant - Complete Development & Deployment Makefile
# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

.PHONY: help install dev test deploy clean

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
VENV = venv
DOCKER_COMPOSE = docker-compose
KUBECTL = kubectl
HELM = helm
PYTEST = pytest
PYTEST_ARGS = -v --tb=short

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
PURPLE = \033[0;35m
CYAN = \033[0;36m
NC = \033[0m # No Color

##@ üìã –°–ø—Ä–∞–≤–∫–∞
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)ü§ñ AI Assistant - –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è$(NC)"
	@echo ""
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(CYAN)üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:$(NC)"
	@echo "  ‚Ä¢ API Docs:      http://localhost:8000/docs"
	@echo "  ‚Ä¢ Health:        http://localhost:8000/health"
	@echo "  ‚Ä¢ Frontend:      http://localhost:3000"
	@echo "  ‚Ä¢ Adminer:       http://localhost:8080"
	@echo "  ‚Ä¢ Redis UI:      http://localhost:8081"
	@echo "  ‚Ä¢ Qdrant UI:     http://localhost:6333/dashboard"
	@echo "  ‚Ä¢ MailHog:       http://localhost:8025"
	@echo "  ‚Ä¢ Grafana:       http://localhost:3001"
	@echo "  ‚Ä¢ Prometheus:    http://localhost:9090"

##@ üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
quick-start: ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ + –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç AI Assistant...$(NC)"
	$(MAKE) install
	$(MAKE) dev-infra-up
	@echo "$(CYAN)üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: make dev$(NC)"

setup-dev: install dev-infra-up migrate load-test-data ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤–æ!$(NC)"
	@echo "$(CYAN)–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: make dev$(NC)"

##@ üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@if [ ! -d "$(VENV)" ]; then python3 -m venv $(VENV); fi
	./$(VENV)/bin/pip install --upgrade pip
	./$(VENV)/bin/pip install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

install-dev: install ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "$(BLUE)üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	./$(VENV)/bin/pip install -r config/environments/requirements-dev.txt || true
	./$(VENV)/bin/pip install black pylint mypy pytest-cov flake8 || true
	@echo "$(GREEN)‚úÖ Dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

##@ üê≥ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-infra-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É (–ë–î, Redis, Qdrant)
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml up -d postgres redis qdrant
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üìä –°—Ç–∞—Ç—É—Å: make dev-infra-status$(NC)"
	@echo "$(CYAN)üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è:$(NC)"
	@echo "  ‚Ä¢ PostgreSQL: localhost:5432 (ai_user/ai_password_dev)"
	@echo "  ‚Ä¢ Redis:      localhost:6379"
	@echo "  ‚Ä¢ Qdrant:     localhost:6333"

dev-infra-up-full: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É + –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ + LLM
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml --profile admin --profile llm up -d
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üåê –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  ‚Ä¢ Adminer:    http://localhost:8080"
	@echo "  ‚Ä¢ Redis UI:   http://localhost:8081"
	@echo "  ‚Ä¢ Ollama:     http://localhost:11434"

dev-infra-up-monitoring: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É + –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
	@echo "$(GREEN)üìä –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml --profile monitoring up -d
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:$(NC)"
	@echo "  ‚Ä¢ Grafana:    http://localhost:3001 (admin/admin123)"
	@echo "  ‚Ä¢ Prometheus: http://localhost:9090"

dev-infra-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml down
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

dev-infra-status: ## –°—Ç–∞—Ç—É—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml ps

dev-infra-logs: ## –õ–æ–≥–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(GREEN)üìã –õ–æ–≥–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml logs -f

dev-infra-clean: ## –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(RED)üßπ –í–ù–ò–ú–ê–ù–ò–ï: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã!$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? [y/N] " -n 1 -r; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		echo ""; \
		$(DOCKER_COMPOSE) -f docker-compose.dev.yml down -v; \
		docker volume prune -f; \
		echo "$(GREEN)‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã$(NC)"; \
	else \
		echo ""; \
		echo "$(YELLOW)–û—Ç–º–µ–Ω–µ–Ω–æ$(NC)"; \
	fi

##@ üèÉ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev: ## –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üèÉ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "$(YELLOW)üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞: make dev-infra-up$(NC)"
	@export PYTHONPATH=$$PWD && \
	 export ENVIRONMENT=development && \
	 export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	 export REDIS_URL=redis://localhost:6379/0 && \
	 export QDRANT_URL=http://localhost:6333 && \
	 export DEBUG=true && \
	 export LOG_LEVEL=DEBUG && \
	 export SECRET_KEY=dev-secret-key-not-for-production && \
	 ./$(VENV)/bin/uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

dev-debug: ## –ó–∞–ø—É—Å–∫ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
	@echo "$(YELLOW)üêõ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏...$(NC)"
	@export PYTHONPATH=$$PWD && \
	 export ENVIRONMENT=development && \
	 export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	 export REDIS_URL=redis://localhost:6379/0 && \
	 export QDRANT_URL=http://localhost:6333 && \
	 export DEBUG=true && \
	 export LOG_LEVEL=DEBUG && \
	 export SECRET_KEY=dev-secret-key-not-for-production && \
	 ./$(VENV)/bin/uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 --log-level debug

##@ üê≥ Docker –û–∫—Ä—É–∂–µ–Ω–∏—è
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Docker Compose —Ñ–∞–π–ª–æ–≤
DOCKER_PATH = deployment/docker
COMPOSE_DEV = -f docker-compose.dev.yml
COMPOSE_TEST = -f docker-compose.tests.yml
COMPOSE_FULL = -f docker-compose.full.yml
COMPOSE_PROD = -f docker-compose.prod.yml
COMPOSE_LOAD = -f docker-compose.load-test.yml

up-dev: ## üîß –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) up -d postgres redis qdrant
	@echo "$(GREEN)‚úÖ Development infrastructure started!$(NC)"
	@echo "$(CYAN)üóÑÔ∏è  PostgreSQL: localhost:5432 (ai_user/ai_password_dev)$(NC)"
	@echo "$(CYAN)üîç Qdrant:     http://localhost:6333$(NC)"
	@echo "$(CYAN)üì® Redis:      localhost:6379$(NC)"
	@echo "$(CYAN)üí° Run app:    make dev$(NC)"

up-dev-full: ## üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (+ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) --profile admin up -d
	@echo "$(GREEN)‚úÖ Full development environment started!$(NC)"
	@echo "$(CYAN)üìñ App:        http://localhost:8000$(NC)"
	@echo "$(CYAN)üóÑÔ∏è  PostgreSQL: localhost:5432$(NC)"
	@echo "$(CYAN)üîç Qdrant:     http://localhost:6333$(NC)"
	@echo "$(CYAN)üì® Redis:      localhost:6379$(NC)"
	@echo "$(CYAN)üîß Adminer:    http://localhost:8080$(NC)"
	@echo "$(CYAN)üìä Redis UI:   http://localhost:8081$(NC)"

up-dev-with-llm: ## ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É + LLM (Ollama)
	@echo "$(GREEN)ü§ñ –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å LLM...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) --profile admin --profile llm up -d
	@echo "$(GREEN)‚úÖ Development with LLM started!$(NC)"
	@echo "$(CYAN)ü§ñ Ollama:     http://localhost:11434$(NC)"

up-dev-monitoring: ## üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
	@echo "$(GREEN)üìä –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) --profile monitoring up -d
	@echo "$(GREEN)‚úÖ Development with monitoring started!$(NC)"
	@echo "$(CYAN)üìä Grafana:    http://localhost:3001 (admin/admin123)$(NC)"
	@echo "$(CYAN)üìà Prometheus: http://localhost:9090$(NC)"

##@ üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
up-test: ## üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (unit/integration)
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) up -d test-postgres test-redis test-qdrant test-app
	@echo "$(GREEN)‚úÖ Test environment started!$(NC)"
	@echo "$(CYAN)üß™ Test App:   http://localhost:8001$(NC)"
	@echo "$(CYAN)üóÑÔ∏è  Test DB:    localhost:5433$(NC)"
	@echo "$(CYAN)üîç Test Qdrant: http://localhost:6335$(NC)"
	@echo "$(CYAN)üì® Test Redis:  localhost:6380$(NC)"

up-test-e2e: ## üéØ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ E2E —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (+ Jira, Confluence, GitLab)
	@echo "$(GREEN)üéØ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—ç—Ç–æ –∑–∞–π–º–µ—Ç 10-15 –º–∏–Ω—É—Ç)...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) --profile e2e up -d
	@echo "$(GREEN)‚úÖ E2E environment started!$(NC)"
	@echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (5-10 –º–∏–Ω—É—Ç)...$(NC)"
	@echo "$(CYAN)üß™ Test App:    http://localhost:8001$(NC)"
	@echo "$(CYAN)üìã Jira:       http://localhost:8082$(NC)"
	@echo "$(CYAN)üìù Confluence: http://localhost:8083$(NC)"
	@echo "$(CYAN)ü¶ä GitLab:     http://localhost:8084$(NC)"
	@echo "$(CYAN)üîç Elastic:    http://localhost:9201$(NC)"
	@echo "$(CYAN)üíæ ClickHouse: http://localhost:8125$(NC)"
	@echo "$(CYAN)üìä YDB:        http://localhost:8766$(NC)"

up-test-load: ## ‚ö° –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
	@echo "$(GREEN)‚ö° –ó–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_LOAD) up -d
	@echo "$(GREEN)‚úÖ Load test environment started!$(NC)"

##@ üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏–π
down-dev: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) down

down-test: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) down

down-test-e2e: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å E2E —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ E2E —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) --profile e2e down

down-all: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(RED)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Docker –æ–∫—Ä—É–∂–µ–Ω–∏–π...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) down || true
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) down || true
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_FULL) down || true
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_PROD) down || true
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_LOAD) down || true
	@echo "$(GREEN)‚úÖ All environments stopped$(NC)"

##@ üìä –°—Ç–∞—Ç—É—Å –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
status-dev: ## üìä –°—Ç–∞—Ç—É—Å –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) ps

status-test: ## üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) ps

status-all: ## üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π:$(NC)"
	@echo "$(GREEN)Development:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) ps 2>/dev/null || echo "  Not running"
	@echo "$(GREEN)Testing:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) ps 2>/dev/null || echo "  Not running"

logs-dev: ## üìã –õ–æ–≥–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üìã –õ–æ–≥–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) logs -f

logs-test: ## üìã –õ–æ–≥–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(GREEN)üìã –õ–æ–≥–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) logs -f

##@ üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Å Docker)
test-with-docker: up-test ## üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ —Å Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º...$(NC)"
	@sleep 30  # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
	@export PYTHONPATH=$$PWD && \
	 export DATABASE_URL=postgresql://test_user:test_password@localhost:5433/ai_test && \
	 export REDIS_URL=redis://localhost:6380/0 && \
	 export QDRANT_URL=http://localhost:6335 && \
	 export TESTING=true && \
	 $(PYTEST) $(PYTEST_ARGS) tests/unit/ tests/integration/
	@$(MAKE) down-test

test-unit-docker: up-test ## üî¨ Unit —Ç–µ—Å—Ç—ã —Å Docker
	@echo "$(BLUE)üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤ —Å Docker...$(NC)"
	@sleep 20
	@export PYTHONPATH=$$PWD && \
	 export DATABASE_URL=postgresql://test_user:test_password@localhost:5433/ai_test && \
	 export REDIS_URL=redis://localhost:6380/0 && \
	 export QDRANT_URL=http://localhost:6335 && \
	 export TESTING=true && \
	 $(PYTEST) $(PYTEST_ARGS) tests/unit/ -m "not slow"
	@$(MAKE) down-test

test-integration-docker: up-test ## üîó Integration —Ç–µ—Å—Ç—ã —Å Docker
	@echo "$(BLUE)üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤ —Å Docker...$(NC)"
	@sleep 30
	@export PYTHONPATH=$$PWD && \
	 export DATABASE_URL=postgresql://test_user:test_password@localhost:5433/ai_test && \
	 export REDIS_URL=redis://localhost:6380/0 && \
	 export QDRANT_URL=http://localhost:6335 && \
	 export TESTING=true && \
	 $(PYTEST) $(PYTEST_ARGS) tests/integration/ --timeout=300
	@$(MAKE) down-test

test-e2e-docker: up-test-e2e load-test-data-e2e ## üé≠ E2E —Ç–µ—Å—Ç—ã —Å –ø–æ–ª–Ω—ã–º Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
	@echo "$(BLUE)üé≠ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–ª–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º...$(NC)"
	@echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (3-5 –º–∏–Ω—É—Ç)...$(NC)"
	@sleep 180
	@export PYTHONPATH=$$PWD && \
	 export DATABASE_URL=postgresql://test_user:test_password@localhost:5433/ai_test && \
	 export REDIS_URL=redis://localhost:6380/0 && \
	 export QDRANT_URL=http://localhost:6335 && \
	 export JIRA_URL=http://localhost:8082 && \
	 export CONFLUENCE_URL=http://localhost:8083 && \
	 export GITLAB_URL=http://localhost:8084 && \
	 export TESTING=true && \
	 $(PYTEST) $(PYTEST_ARGS) tests/e2e/ --timeout=600
	@$(MAKE) down-test-e2e

test-load-docker: up-test-load ## ‚ö° –ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å Docker
	@echo "$(BLUE)‚ö° –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@sleep 30
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/python tests/performance/test_core_functionality_load.py
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_LOAD) down

##@ üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
load-test-data-basic: ## üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
	@echo "$(GREEN)üìä –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) run --rm test-data-loader

load-test-data-e2e: ## üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è E2E —Ç–µ—Å—Ç–æ–≤
	@echo "$(GREEN)üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è E2E —Ç–µ—Å—Ç–æ–≤...$(NC)"
	cd $(DOCKER_PATH) && LOAD_E2E_DATA=true $(DOCKER_COMPOSE) $(COMPOSE_TEST) --profile e2e run --rm test-data-loader

clean-test-data: ## üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) down -v

##@ üî® –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
build-dev: ## üî® –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) build

build-test: ## üî® –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) build

build-all: ## üî® –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_DEV) build
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_TEST) build
	cd $(DOCKER_PATH) && $(DOCKER_COMPOSE) $(COMPOSE_FULL) build

##@ üéØ –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
quick-test: ## ‚ö° –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ unit, –±–µ–∑ Docker)
	@echo "$(BLUE)‚ö° –ë—ã—Å—Ç—Ä–æ–µ unit —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...$(NC)"
	@export PYTHONPATH=$$PWD && $(PYTEST) $(PYTEST_ARGS) tests/unit/ -x --tb=short -q

quick-test-file: ## ‚ö° –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (make quick-test-file FILE=tests/unit/test_file.py)
	@if [ -z "$(FILE)" ]; then echo "$(RED)–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª: make quick-test-file FILE=tests/unit/test_file.py$(NC)"; exit 1; fi
	@echo "$(BLUE)‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ $(FILE)...$(NC)"
	@export PYTHONPATH=$$PWD && $(PYTEST) $(PYTEST_ARGS) $(FILE) -v

dev-reset: down-dev up-dev ## üîÑ –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

test-reset: down-test up-test ## üîÑ –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

##@ üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Å–ø—Ä–∞–≤–∫–∞
docs-docker: ## üìö –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è–º
	@echo "$(GREEN)üìö AI Assistant - Docker Environments Documentation$(NC)"
	@echo ""
	@echo "$(CYAN)üîß Development Environments:$(NC)"
	@echo "  make up-dev          - –¢–æ–ª—å–∫–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–ë–î, Redis, Qdrant)"
	@echo "  make up-dev-full     - + –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (Adminer, Redis UI)"
	@echo "  make up-dev-with-llm - + –ª–æ–∫–∞–ª—å–Ω—ã–π LLM (Ollama)"
	@echo "  make up-dev-monitoring - + –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Grafana, Prometheus)"
	@echo ""
	@echo "$(CYAN)üß™ Test Environments:$(NC)"
	@echo "  make up-test         - –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  make up-test-e2e     - –ü–æ–ª–Ω–æ–µ E2E –æ–∫—Ä—É–∂–µ–Ω–∏–µ (+ Jira, Confluence, GitLab)"
	@echo "  make up-test-load    - –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
	@echo ""
	@echo "$(CYAN)üß™ Test Commands:$(NC)"
	@echo "  make test-with-docker      - –í—Å–µ —Ç–µ—Å—Ç—ã —Å Docker"
	@echo "  make test-unit-docker      - Unit —Ç–µ—Å—Ç—ã —Å Docker"  
	@echo "  make test-integration-docker - Integration —Ç–µ—Å—Ç—ã —Å Docker"
	@echo "  make test-e2e-docker       - E2E —Ç–µ—Å—Ç—ã —Å –ø–æ–ª–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
	@echo "  make test-load-docker      - –ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ç–µ—Å—Ç—ã"
	@echo ""
	@echo "$(CYAN)‚ö° Quick Commands:$(NC)"
	@echo "  make quick-test           - –ë—ã—Å—Ç—Ä—ã–µ unit —Ç–µ—Å—Ç—ã (–±–µ–∑ Docker)"
	@echo "  make quick-test-file FILE=path - –¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
	@echo "  make dev-reset           - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make test-reset          - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"

help-docker: docs-docker ## –ê–ª–∏–∞—Å –¥–ª—è docs-docker

# –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help

# –ê–ª–∏–∞—Å—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
docker-up: system-up
docker-down: system-down
docker-logs: system-logs
docker-status: system-status

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
load-test-data: ## –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
	@echo "üìä Loading test data..."
	python tools/scripts/create_data.py

backup-db: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üíæ Creating database backup..."
	pg_dump ai_assistant > backup_$(shell date +%Y%m%d_%H%M%S).sql

# –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help 