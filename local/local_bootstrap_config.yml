# 🚀 Локальная конфигурация bootstrap обучения AI Assistant
# Используется для разовой загрузки данных без ожидания cron jobs

# ═══════════════════════════════════════════════════════════════════
# 🏢 CONFLUENCE КОНФИГУРАЦИЯ
# ═══════════════════════════════════════════════════════════════════
confluence:
  enabled: true
  url: "https://your-company.atlassian.net"
  username: "ai-assistant@company.com"
  api_token: "${CONFLUENCE_API_TOKEN}"
  
  # Spaces для загрузки (пространства знаний)
  spaces:
    - "TECH"      # Техническая документация
    - "PROJ"      # Проектная документация  
    - "ARCH"      # Архитектура системы
    - "API"       # API документация
    - "GUIDE"     # Руководства и гайды
    - "PROC"      # Процессы и стандарты
  
  # Фильтры страниц
  page_filters:
    - "updated >= -30d"  # Обновленные за последний месяц
    - "type = page"      # Только страницы, не комментарии
  
  # Лимиты для разовой загрузки
  max_pages_per_space: 100
  max_total_pages: 500
  
  # Настройки контента
  include_attachments: false  # Не загружаем аттачменты для bootstrap
  include_comments: true      # Включаем комментарии
  extract_links: true         # Извлекаем ссылки

# ═══════════════════════════════════════════════════════════════════
# 🦊 GITLAB СЕРВЕРЫ КОНФИГУРАЦИЯ  
# ═══════════════════════════════════════════════════════════════════
gitlab_servers:
  # Основной корпоративный GitLab
  - name: "main_gitlab"
    enabled: true
    url: "https://gitlab.company.com"
    api_token: "${GITLAB_API_TOKEN}"
    
    # Группы и проекты для анализа
    groups:
      - "backend-team"
      - "frontend-team"
      - "devops-team"
      - "architecture"
      - "platform"
      - "microservices"
    
    # Типы файлов для извлечения
    file_extensions:
      - ".md"          # Markdown документация
      - ".rst"         # reStructuredText
      - ".txt"         # Текстовые файлы
      - ".py"          # Python код для анализа
      - ".js"          # JavaScript код
      - ".ts"          # TypeScript код
      - ".go"          # Go код
      - ".yaml"        # YAML конфигурации
      - ".yml"         # YAML конфигурации
      - ".json"        # JSON конфигурации
      - ".toml"        # TOML конфигурации
      - ".dockerfile"  # Docker файлы
      - "Dockerfile"   # Docker файлы
      - "README"       # README файлы
    
    # Исключения (что НЕ загружать)
    exclude_paths:
      - "node_modules/"
      - ".git/"
      - "venv/"
      - "env/"
      - "__pycache__/"
      - ".pytest_cache/"
      - "build/"
      - "dist/"
      - "target/"
      - ".idea/"
      - ".vscode/"
    
    # Лимиты файлов
    max_file_size_mb: 5
    max_files_per_repo: 50
    max_total_files: 1000

  # Дополнительный GitLab (например, для open source проектов)
  - name: "public_gitlab"
    enabled: false  # Отключен по умолчанию
    url: "https://gitlab.com"
    api_token: "${PUBLIC_GITLAB_TOKEN}"
    
    # Specific public projects
    projects:
      - "gitlab-org/gitlab"
      - "charts/gitlab"
    
    file_extensions:
      - ".md"
      - ".rst"
      - ".txt"
    
    max_file_size_mb: 2
    max_files_per_repo: 20

# ═══════════════════════════════════════════════════════════════════
# 📁 ЛОКАЛЬНЫЕ ФАЙЛЫ КОНФИГУРАЦИЯ
# ═══════════════════════════════════════════════════════════════════
local_files:
  enabled: true
  
  # Основная директория для обучающих материалов
  bootstrap_directory: "./local/bootstrap"
  
  # Дополнительные директории для сканирования
  additional_directories:
    - "./docs"              # Документация проекта
    - "./local/data"        # Дополнительные данные
    - "./training_data"     # Специальные обучающие данные
    - "/app/knowledge_base" # Корпоративная база знаний (если mounted)
  
  # Поддерживаемые форматы файлов
  supported_formats:
    documents:
      - ".pdf"    # PDF документы
      - ".docx"   # Word документы
      - ".txt"    # Текстовые файлы
      - ".md"     # Markdown
      - ".rst"    # reStructuredText
      - ".rtf"    # Rich Text Format
    
    archives:
      - ".zip"    # ZIP архивы
      - ".tar.gz" # Gzip архивы
      - ".tar"    # Tar архивы
    
    ebooks:
      - ".epub"   # E-books
      - ".mobi"   # Kindle books
    
    structured:
      - ".json"   # JSON данные
      - ".yaml"   # YAML данные  
      - ".yml"    # YAML данные
      - ".xml"    # XML данные
      - ".csv"    # CSV данные
  
  # Настройки обработки
  processing:
    max_file_size_mb: 50
    encoding_detection: true
    recursive_scan: true        # Сканировать поддиректории
    follow_symlinks: false      # Не следовать символическим ссылкам
    
    # Фильтрация файлов
    exclude_patterns:
      - "*.tmp"
      - "*.bak"
      - "*.log"
      - "*~"
      - ".*"                    # Скрытые файлы
    
    # Минимальные требования к контенту
    min_content_length: 50      # Минимум 50 символов
    skip_binary_files: true     # Пропускать бинарные файлы
    detect_language: true       # Определять язык документа

# ═══════════════════════════════════════════════════════════════════
# ⚙️ НАСТРОЙКИ ОБРАБОТКИ И ВЕКТОРИЗАЦИИ
# ═══════════════════════════════════════════════════════════════════
processing:
  # Разбивка текста на чанки
  chunking:
    chunk_size: 1000          # Размер чанка в символах
    chunk_overlap: 200        # Перекрытие между чанками
    split_on_sentences: true  # Разделять по предложениям
    preserve_structure: true  # Сохранять структуру документа
  
  # Векторизация
  embeddings:
    model: "sentence-transformers/all-MiniLM-L6-v2"
    batch_size: 32
    normalize: true
    device: "auto"            # auto, cpu, cuda
  
  # Очистка и нормализация текста
  text_cleaning:
    remove_html: true
    remove_urls: false        # Сохраняем URL для контекста
    normalize_whitespace: true
    min_word_count: 10
    remove_empty_lines: true
    fix_encoding: true
  
  # Извлечение метаданных
  metadata_extraction:
    extract_title: true
    extract_author: true
    extract_dates: true
    extract_tags: true
    extract_language: true
    extract_keywords: true

# ═══════════════════════════════════════════════════════════════════
# 🗄️ ХРАНЕНИЕ И ИНДЕКСАЦИЯ
# ═══════════════════════════════════════════════════════════════════
storage:
  # Qdrant vector database
  qdrant:
    collection_name: "ai_assistant_bootstrap"
    vector_size: 384
    distance_metric: "Cosine"
    
    # Индексация
    index_params:
      m: 16                   # HNSW parameter
      ef_construct: 200       # HNSW parameter
    
    # Оптимизация
    optimizers_config:
      deleted_threshold: 0.2
      vacuum_min_vector_number: 1000
    
  # Кэширование результатов
  cache:
    enabled: true
    ttl_hours: 24
    max_size_mb: 500

# ═══════════════════════════════════════════════════════════════════
# 📊 КОНТРОЛЬ ВЫПОЛНЕНИЯ И ЛИМИТЫ
# ═══════════════════════════════════════════════════════════════════
execution:
  # Лимиты для защиты от перегрузки
  limits:
    max_concurrent_downloads: 5    # Максимум одновременных загрузок
    max_total_documents: 2000      # Максимум документов за запуск
    max_processing_time_minutes: 60 # Максимальное время выполнения
    rate_limit_delay_seconds: 1    # Задержка между запросами
  
  # Повторные попытки
  retry:
    max_attempts: 3
    delay_seconds: 5
    backoff_multiplier: 2
  
  # Прогресс и логирование
  progress:
    show_progress_bar: true
    log_every_n_items: 10
    save_intermediate_results: true

# ═══════════════════════════════════════════════════════════════════
# 🧪 РЕЖИМЫ ЗАПУСКА
# ═══════════════════════════════════════════════════════════════════
modes:
  # Быстрый тест (для проверки конфигурации)
  quick_test:
    confluence_max_pages: 5
    gitlab_max_files: 10
    local_max_files: 20
    skip_vectorization: false
  
  # Полная загрузка (production mode)
  full_load:
    use_all_limits: true
    enable_all_sources: true
    detailed_logging: true
  
  # Инкрементальная загрузка (только новые/измененные)
  incremental:
    check_last_modified: true
    skip_existing: true
    update_modified: true

# ═══════════════════════════════════════════════════════════════════
# 📧 УВЕДОМЛЕНИЯ И МОНИТОРИНГ
# ═══════════════════════════════════════════════════════════════════
notifications:
  enabled: true
  
  # Email уведомления
  email:
    enabled: false
    smtp_server: "smtp.company.com"
    recipients:
      - "admin@company.com"
      - "devops@company.com"
  
  # Slack уведомления
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#ai-assistant-logs"
  
  # Логирование
  logging:
    level: "INFO"
    format: "detailed"
    file: "./logs/bootstrap.log"
    console: true

# ═══════════════════════════════════════════════════════════════════
# 🔐 БЕЗОПАСНОСТЬ И ВАЛИДАЦИЯ
# ═══════════════════════════════════════════════════════════════════
security:
  # Валидация источников
  validate_ssl: true
  allowed_domains:
    - "*.company.com"
    - "github.com"
    - "gitlab.com"
    - "atlassian.net"
  
  # Фильтрация контента
  content_filters:
    block_sensitive_data: true
    remove_credentials: true
    anonymize_emails: false
    scan_for_secrets: true
  
  # Лимиты безопасности
  max_file_downloads: 5000
  max_concurrent_connections: 10
  connection_timeout_seconds: 30 