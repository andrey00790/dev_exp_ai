# AI Assistant - Complete Development & Deployment Makefile
# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

.PHONY: help install dev test deploy clean

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
VENV = venv
DOCKER_COMPOSE = docker-compose
KUBECTL = kubectl
HELM = helm

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
PURPLE = \033[0;35m
CYAN = \033[0;36m
NC = \033[0m # No Color

##@ üìã –°–ø—Ä–∞–≤–∫–∞
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)ü§ñ AI Assistant - –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è$(NC)"
	@echo ""
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(CYAN)üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:$(NC)"
	@echo "  ‚Ä¢ API Docs:      http://localhost:8000/docs"
	@echo "  ‚Ä¢ Health:        http://localhost:8000/health"
	@echo "  ‚Ä¢ Frontend:      http://localhost:3000"
	@echo "  ‚Ä¢ Adminer:       http://localhost:8080"
	@echo "  ‚Ä¢ Redis UI:      http://localhost:8081"
	@echo "  ‚Ä¢ Qdrant UI:     http://localhost:6333/dashboard"
	@echo "  ‚Ä¢ MailHog:       http://localhost:8025"
	@echo "  ‚Ä¢ Grafana:       http://localhost:3001"
	@echo "  ‚Ä¢ Prometheus:    http://localhost:9090"

##@ üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
quick-start: ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ + –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç AI Assistant...$(NC)"
	$(MAKE) install
	$(MAKE) dev-infra-up
	@echo "$(CYAN)üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: make dev$(NC)"

setup-dev: install dev-infra-up migrate ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤–æ!$(NC)"
	@echo "$(CYAN)–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: make dev$(NC)"

##@ üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@if [ ! -d "$(VENV)" ]; then python3 -m venv $(VENV); fi
	./$(VENV)/bin/pip install --upgrade pip
	./$(VENV)/bin/pip install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

install-dev: install ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "$(BLUE)üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	./$(VENV)/bin/pip install -r config/environments/requirements-dev.txt || true
	./$(VENV)/bin/pip install black pylint mypy pytest-cov flake8 || true
	@echo "$(GREEN)‚úÖ Dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

##@ üê≥ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-infra-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É (–ë–î, Redis, Qdrant)
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml up -d postgres redis qdrant
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üìä –°—Ç–∞—Ç—É—Å: make dev-infra-status$(NC)"
	@echo "$(CYAN)üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è:$(NC)"
	@echo "  ‚Ä¢ PostgreSQL: localhost:5432 (ai_user/ai_password_dev)"
	@echo "  ‚Ä¢ Redis:      localhost:6379"
	@echo "  ‚Ä¢ Qdrant:     localhost:6333"

dev-infra-up-full: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É + –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ + LLM
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml --profile admin --profile llm up -d
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üåê –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  ‚Ä¢ Adminer:    http://localhost:8080"
	@echo "  ‚Ä¢ Redis UI:   http://localhost:8081"
	@echo "  ‚Ä¢ Ollama:     http://localhost:11434"

dev-infra-up-monitoring: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É + –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
	@echo "$(GREEN)üìä –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml --profile monitoring up -d
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:$(NC)"
	@echo "  ‚Ä¢ Grafana:    http://localhost:3001 (admin/admin123)"
	@echo "  ‚Ä¢ Prometheus: http://localhost:9090"

dev-infra-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml down
	@echo "$(GREEN)‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

dev-infra-status: ## –°—Ç–∞—Ç—É—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml ps

dev-infra-logs: ## –õ–æ–≥–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(GREEN)üìã –õ–æ–≥–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml logs -f

dev-infra-clean: ## –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(RED)üßπ –í–ù–ò–ú–ê–ù–ò–ï: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã!$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? [y/N] " -n 1 -r; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		echo ""; \
		$(DOCKER_COMPOSE) -f docker-compose.dev.yml down -v; \
		docker volume prune -f; \
		echo "$(GREEN)‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã$(NC)"; \
	else \
		echo ""; \
		echo "$(YELLOW)–û—Ç–º–µ–Ω–µ–Ω–æ$(NC)"; \
	fi

##@ üèÉ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev: ## –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üèÉ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "$(YELLOW)üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞: make dev-infra-up$(NC)"
	@export PYTHONPATH=$$PWD && \
	 export ENVIRONMENT=development && \
	 export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	 export REDIS_URL=redis://localhost:6379/0 && \
	 export QDRANT_URL=http://localhost:6333 && \
	 export DEBUG=true && \
	 export LOG_LEVEL=DEBUG && \
	 export SECRET_KEY=dev-secret-key-not-for-production && \
	 ./$(VENV)/bin/uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

dev-debug: ## –ó–∞–ø—É—Å–∫ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
	@echo "$(YELLOW)üêõ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏...$(NC)"
	@export PYTHONPATH=$$PWD && \
	 export ENVIRONMENT=development && \
	 export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	 export REDIS_URL=redis://localhost:6379/0 && \
	 export QDRANT_URL=http://localhost:6333 && \
	 export DEBUG=true && \
	 export LOG_LEVEL=DEBUG && \
	 export SECRET_KEY=dev-secret-key-not-for-production && \
	 ./$(VENV)/bin/uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 --log-level debug

##@ üê≥ –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (Docker)
system-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É –≤ Docker
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.simple.yml up -d
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(CYAN)üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  ‚Ä¢ API:        http://localhost:8000"
	@echo "  ‚Ä¢ Frontend:   http://localhost:3000"
	@echo "  ‚Ä¢ API Docs:   http://localhost:8000/docs"

system-up-full: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.full.yml --profile monitoring up -d
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"

system-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.simple.yml down
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.full.yml down
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

system-status: ## –°—Ç–∞—Ç—É—Å –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.simple.yml ps || true
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.full.yml ps || true

system-logs: ## –õ–æ–≥–∏ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üìã –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.simple.yml logs -f

system-restart: system-down system-up ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É

##@ üóÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
migrate: ## –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
	@echo "$(BLUE)üóÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@export PYTHONPATH=$$PWD && \
	 export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	 ./$(VENV)/bin/alembic upgrade head
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã$(NC)"

migrate-create: ## –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
	@read -p "–ù–∞–∑–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: " name; \
	export PYTHONPATH=$$PWD && \
	export DATABASE_URL=postgresql://ai_user:ai_password_dev@localhost:5432/ai_assistant && \
	./$(VENV)/bin/alembic revision --autogenerate -m "$$name"

db-reset: ## –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(RED)üóÑ –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml stop postgres
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml rm -f postgres
	@$(DOCKER_COMPOSE) -f docker-compose.dev.yml up -d postgres
	@sleep 10
	@$(MAKE) migrate
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞$(NC)"

##@ üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test: ## –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest tests/ -v --tb=short

test-unit: ## –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest tests/unit/ -v

test-integration: ## –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest tests/integration/ -v

test-smoke: ## –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üí® –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest tests/smoke/ -v

test-e2e: ## –ó–∞–ø—É—Å–∫ e2e —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üé≠ –ó–∞–ø—É—Å–∫ e2e —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest tests/e2e/ -v

test-coverage: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
	@echo "$(BLUE)üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/pytest --cov=app --cov-report=html --cov-report=term tests/
	@echo "$(GREEN)üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ htmlcov/index.html$(NC)"

test-load: ## –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)‚ö° –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/python tests/performance/test_core_functionality_load.py

##@ üîç –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
lint: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	./$(VENV)/bin/flake8 app/ tests/ || true
	./$(VENV)/bin/pylint app/ --disable=C0114,C0116 || true

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "$(BLUE)‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	./$(VENV)/bin/black app/ tests/ || true
	./$(VENV)/bin/isort app/ tests/ || true

format-check: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	@echo "$(BLUE)üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...$(NC)"
	./$(VENV)/bin/black --check app/ tests/ || true
	./$(VENV)/bin/isort --check-only app/ tests/ || true

##@ ‚éà Kubernetes & Helm
helm-install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Helm
	@echo "$(PURPLE)‚éà –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Helm...$(NC)"
	@$(HELM) install ai-assistant deployment/helm/ai-assistant/ \
		--namespace ai-assistant \
		--create-namespace \
		--values deployment/helm/ai-assistant/values.yaml \
		--wait
	@echo "$(GREEN)‚úÖ Helm —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

helm-upgrade: ## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Helm —Ä–µ–ª–∏–∑–∞
	@echo "$(PURPLE)‚éà –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Helm —Ä–µ–ª–∏–∑–∞...$(NC)"
	@$(HELM) upgrade ai-assistant deployment/helm/ai-assistant/ \
		--namespace ai-assistant \
		--values deployment/helm/ai-assistant/values.yaml \
		--wait
	@echo "$(GREEN)‚úÖ Helm –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(NC)"

helm-uninstall: ## –£–¥–∞–ª–µ–Ω–∏–µ Helm —Ä–µ–ª–∏–∑–∞
	@echo "$(RED)‚éà –£–¥–∞–ª–µ–Ω–∏–µ Helm —Ä–µ–ª–∏–∑–∞...$(NC)"
	@$(HELM) uninstall ai-assistant --namespace ai-assistant
	@echo "$(GREEN)‚úÖ Helm —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(NC)"

helm-status: ## –°—Ç–∞—Ç—É—Å Helm –¥–µ–ø–ª–æ—è
	@echo "$(BLUE)‚éà –°—Ç–∞—Ç—É—Å Helm:$(NC)"
	@$(HELM) status ai-assistant --namespace ai-assistant

helm-logs: ## –õ–æ–≥–∏ Helm –¥–µ–ø–ª–æ—è
	@echo "$(GREEN)‚éà –õ–æ–≥–∏ Helm:$(NC)"
	@$(KUBECTL) logs -l app.kubernetes.io/name=ai-assistant -n ai-assistant -f

##@ üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@curl -f http://localhost:8000/health 2>/dev/null | jq . || echo "$(RED)‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

health-detailed: ## –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
	@echo "$(BLUE)üî¨ –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞...$(NC)"
	@export PYTHONPATH=$$PWD && ./$(VENV)/bin/python debug_helper.py basic || true

logs: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(BLUE)üìã –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	@tail -f logs/app.log 2>/dev/null || echo "$(YELLOW)–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"

monitor: ## –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
	@echo "$(BLUE)üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...$(NC)"
	@$(DOCKER_COMPOSE) -f monitoring/docker-compose.monitoring.yml up -d || true
	@echo "$(GREEN)Grafana: http://localhost:3001$(NC)"
	@echo "$(GREEN)Prometheus: http://localhost:9090$(NC)"

##@ üßπ –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	find . -type f -name "*.pyc" -delete 2>/dev/null || true
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true
	rm -rf .pytest_cache/ htmlcov/ .coverage 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã$(NC)"

clean-docker: ## –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(RED)üê≥ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	docker system prune -f
	docker volume prune -f
	@echo "$(GREEN)‚úÖ Docker —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã$(NC)"

clean-all: clean clean-docker dev-infra-clean ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

##@ üì¶ –ü—Ä–æ–¥–∞–∫—à–Ω –¥–µ–ø–ª–æ–π
build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
	@echo "$(BLUE)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker build -t ai-assistant:latest .
	docker build -f deployment/docker/Dockerfile.prod -t ai-assistant:prod .

deploy-prod: build ## –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
	@echo "$(GREEN)üè≠ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.prod.yml up -d

deploy-local: build ## –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Docker
	@echo "$(GREEN)üöÄ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...$(NC)"
	@$(DOCKER_COMPOSE) -f deployment/docker/docker-compose.simple.yml up -d

##@ ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
status: ## –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º:$(NC)"
	@echo "$(GREEN)Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:$(NC)"
	@docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
	@echo ""
	@echo "$(GREEN)Kubernetes pods:$(NC)"
	@$(KUBECTL) get pods -n ai-assistant 2>/dev/null || echo "Kubernetes –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

info: ## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(GREEN)ü§ñ AI Assistant Platform$(NC)"
	@echo "$(BLUE)–í–µ—Ä—Å–∏—è:$(NC) 1.0.0"
	@echo "$(BLUE)Python:$(NC) $$(python3 --version 2>/dev/null || echo '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
	@echo "$(BLUE)Docker:$(NC) $$(docker --version 2>/dev/null | head -1 || echo '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
	@echo "$(BLUE)Kubernetes:$(NC) $$(kubectl version --client --short 2>/dev/null || echo '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω')"
	@echo ""
	@echo "$(GREEN)üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:$(NC)"
	@echo "  API:           http://localhost:8000"
	@echo "  Docs:          http://localhost:8000/docs"
	@echo "  Health:        http://localhost:8000/health"
	@echo "  Frontend:      http://localhost:3000"
	@echo "  Adminer:       http://localhost:8080"
	@echo "  Redis UI:      http://localhost:8081"
	@echo "  Qdrant UI:     http://localhost:6333/dashboard"
	@echo "  MailHog:       http://localhost:8025"
	@echo "  Grafana:       http://localhost:3001"
	@echo "  Prometheus:    http://localhost:9090"

# –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help

# –ê–ª–∏–∞—Å—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
docker-up: system-up
docker-down: system-down
docker-logs: system-logs
docker-status: system-status 