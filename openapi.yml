openapi: 3.0.3
info:
  title: AI Assistant API
  description: |
    –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ RFC —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    
    üö® **–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:** 
    –í–°–ï –ù–û–í–´–ï API ENDPOINTS –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –û–¢–†–ê–ñ–ï–ù–´ –í –≠–¢–û–ô OPENAPI –°–ü–ï–¶–ò–§–ò–ö–ê–¶–ò–ò!
    –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö endpoints –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª.
    
    üìã **–°—Ç–∞—Ç—É—Å –ø–æ–∫—Ä—ã—Ç–∏—è:** –ù–∞–π–¥–µ–Ω–æ 80+ API endpoints –≤ 12 –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    üìÖ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** 14.06.2025 - –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –º–æ–¥—É–ª–∏ API
    
    ‚úÖ **–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:**
    - app/api/v1/auth.py (10 endpoints) ‚úÖ
    - app/api/v1/users.py (4 endpoints) ‚úÖ  
    - app/api/v1/ai_enhancement.py (4 endpoints) ‚úÖ –ù–û–í–´–ï!
    - app/api/v1/vector_search.py (9 endpoints) ‚ö†Ô∏è —á–∞—Å—Ç–∏—á–Ω–æ
    - app/api/v1/generate.py (8 endpoints) ‚úÖ
    - app/api/v1/search.py (10 endpoints) ‚ö†Ô∏è —á–∞—Å—Ç–∏—á–Ω–æ
    - app/api/v1/documentation.py (6 endpoints) ‚ö†Ô∏è —Ç—Ä–µ–±—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    - app/api/v1/feedback.py (9 endpoints) ‚ö†Ô∏è —Ç—Ä–µ–±—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    - app/api/v1/learning.py (4 endpoints) ‚ö†Ô∏è —Ç—Ä–µ–±—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    - app/api/v1/llm_management.py (7 endpoints) ‚ö†Ô∏è —Ç—Ä–µ–±—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    - app/api/v1/configurations.py (2 endpoints) ‚úÖ
    - app/api/v1/sync.py (3 endpoints) ‚úÖ
    - app/api/v1/documents.py (5 endpoints) ‚ö†Ô∏è —Ç—Ä–µ–±—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  version: 2.1.0
  contact:
    name: AI Assistant Support

servers:
  - url: http://localhost:8000
    description: Local development server

security:
  - bearerAuth: []

tags:
  - name: Health
    description: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
  - name: Authentication
    description: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  - name: User Management
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  - name: Data Sources
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
  - name: Sync Management
    description: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  - name: AI Generation
    description: AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  - name: AI Enhancement
    description: –£–ª—É—á—à–µ–Ω–∏–µ AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π (fine-tuning, –∫–∞—á–µ—Å—Ç–≤–æ RFC, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
  - name: Search
    description: –ü–æ–∏—Å–∫ –ø–æ –¥–∞–Ω–Ω—ã–º
  - name: Vector Search
    description: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏
  - name: Documentation
    description: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ–¥–∞
  - name: Feedback
    description: –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
  - name: Learning
    description: –°–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º
  - name: LLM Management
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏

paths:
  # ===== HEALTH & ROOT =====
  /:
    get:
      summary: Root endpoint
      tags: [Health]
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'

  /health:
    get:
      summary: Health check
      tags: [Health]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /api/v1/health:
    get:
      summary: Health Check V1
      description: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å API v1
      tags: [Health]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å API v1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  # ===== AUTHENTICATION =====
  /api/v1/auth/register:
    post:
      summary: Register new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /api/v1/auth/login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /api/v1/auth/me:
    get:
      summary: Get current user info
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/v1/auth/verify:
    get:
      summary: Verify token
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω

  /api/v1/auth/refresh:
    post:
      summary: Refresh token
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /api/v1/auth/budget:
    get:
      summary: Get user budget info
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—é–¥–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  /api/v1/auth/scopes:
    get:
      summary: Get user scopes
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  /api/v1/auth/profile:
    get:
      summary: Get user profile
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'

  /api/v1/auth/usage-stats:
    get:
      summary: Get usage statistics
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

  /api/v1/auth/logout:
    post:
      summary: Logout user
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã

  /api/v1/auth/demo-users:
    get:
      summary: Get demo users
      tags: [Authentication]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

  # ===== USER MANAGEMENT =====
  /api/v1/users:
    post:
      summary: Create user
      tags: [User Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /api/v1/users/{user_id}:
    get:
      summary: Get user by ID
      tags: [User Management]
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /api/v1/users/current/settings:
    get:
      summary: Get current user settings
      tags: [User Management]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
    put:
      summary: Update current user settings
      tags: [User Management]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
      responses:
        '200':
          description: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'

  # ===== CONFIGURATIONS =====
  /api/v1/configurations/jira:
    post:
      summary: Create Jira configuration
      tags: [Data Sources]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraConfigCreate'
      responses:
        '201':
          description: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
    get:
      summary: Get Jira configurations
      tags: [Data Sources]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Jira
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigResponse'

  # ===== SYNC MANAGEMENT =====
  /api/v1/sync/tasks:
    post:
      summary: Start sync task
      tags: [Sync Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncTaskCreate'
      responses:
        '201':
          description: –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncTask'

  /api/v1/sync/jira:
    post:
      summary: Sync Jira data
      tags: [Sync Management]
      responses:
        '200':
          description: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Jira –∑–∞–ø—É—â–µ–Ω–∞

  /api/v1/sync/confluence:
    post:
      summary: Sync Confluence data
      tags: [Sync Management]
      responses:
        '200':
          description: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Confluence –∑–∞–ø—É—â–µ–Ω–∞

  # ===== AI GENERATION =====
  /api/v1/generate:
    post:
      summary: Generate RFC
      tags: [AI Generation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: RFC —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω

  /api/v1/generate/rfc:
    post:
      summary: Generate RFC document
      tags: [AI Generation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRFCRequest'
      responses:
        '200':
          description: RFC –¥–æ–∫—É–º–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω

  /api/v1/generate/session:
    post:
      summary: Start generation session
      tags: [AI Generation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSessionRequest'
      responses:
        '200':
          description: –°–µ—Å—Å–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω–∞

  /api/v1/generate/session/{session_id}:
    get:
      summary: Get generation session
      tags: [AI Generation]
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

  /api/v1/generate/sessions:
    get:
      summary: Get user sessions
      tags: [AI Generation]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  /api/v1/generate/sessions/{session_id}:
    delete:
      summary: Delete generation session
      tags: [AI Generation]
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –°–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω–∞

  /api/v1/generate/templates:
    get:
      summary: Get available templates
      tags: [AI Generation]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤

  # ===== AI ENHANCEMENT =====
  /api/v1/ai-enhancement/model/train:
    post:
      summary: Train AI model
      description: –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ (fine-tuning, –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
      tags: [AI Enhancement]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelTrainingRequest'
      responses:
        '200':
          description: –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTrainingResponse'

  /api/v1/ai-enhancement/model/training/{training_id}/status:
    get:
      summary: Get training status
      description: –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
      tags: [AI Enhancement]
      parameters:
        - name: training_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏

  /api/v1/ai-enhancement/rfc/analyze-quality:
    post:
      summary: Analyze RFC quality
      description: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ RFC –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ø–æ–ª–Ω–æ—Ç–∞, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –≥–ª—É–±–∏–Ω–∞, —è—Å–Ω–æ—Å—Ç—å)
      tags: [AI Enhancement]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RFCQualityAnalysisRequest'
      responses:
        '200':
          description: –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ RFC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCQualityAnalysisResponse'

  /api/v1/ai-enhancement/search/optimize:
    post:
      summary: Optimize search performance
      description: –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø–µ—Ä–µ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ)
      tags: [AI Enhancement]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchOptimizationRequest'
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOptimizationResponse'

  /api/v1/ai-enhancement/status:
    get:
      summary: Get AI enhancement status
      description: –ü–æ–ª—É—á–∞–µ—Ç –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π (fine-tuning, –∫–∞—á–µ—Å—Ç–≤–æ RFC, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞)
      tags: [AI Enhancement]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

  # ===== VECTOR SEARCH =====
  /api/v1/vector-search/search:
    post:
      summary: Semantic vector search
      description: –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤–µ–∫—Ç–æ—Ä–æ–≤
      tags: [Vector Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VectorSearchRequest'
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorSearchResponse'

  /api/v1/vector-search/index:
    post:
      summary: Index document
      tags: [Vector Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexDocumentRequest'
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω

  /api/v1/vector-search/documents/{doc_id}:
    delete:
      summary: Delete document
      tags: [Vector Search]
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω

  /api/v1/vector-search/similar/{doc_id}:
    get:
      summary: Find similar documents
      tags: [Vector Search]
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –ü–æ—Ö–æ–∂–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'

  /api/v1/vector-search/stats:
    get:
      summary: Get search statistics
      tags: [Vector Search]
      responses:
        '200':
          description: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞

  /api/v1/vector-search/collections/initialize:
    post:
      summary: Initialize collections
      tags: [Vector Search]
      responses:
        '200':
          description: –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã

  /api/v1/vector-search/upload-file:
    post:
      summary: Upload file for indexing
      tags: [Vector Search]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω

  /api/v1/vector-search/collections:
    get:
      summary: Get collections info
      tags: [Vector Search]
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö

  /api/v1/vector-search/health:
    get:
      summary: Vector search health check
      tags: [Vector Search]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å vector search

  # ===== DOCUMENTATION =====
  /api/v1/documentation/analyze:
    post:
      summary: Analyze code for documentation
      tags: [Documentation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeAnalysisRequest'
      responses:
        '200':
          description: –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω

  /api/v1/documentation/generate:
    post:
      summary: Generate documentation
      tags: [Documentation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentationGenerateRequest'
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞

  /api/v1/documentation/projects:
    get:
      summary: Get analyzed projects
      tags: [Documentation]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤

  /api/v1/documentation/projects/{project_id}:
    get:
      summary: Get project details
      tags: [Documentation]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞

  /api/v1/documentation/upload:
    post:
      summary: Upload code for analysis
      tags: [Documentation]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

  /api/v1/documentation/types:
    get:
      summary: Get supported documentation types
      tags: [Documentation]
      responses:
        '200':
          description: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

  # ===== FEEDBACK =====
  /api/v1/feedback:
    post:
      summary: Submit feedback
      tags: [Feedback]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      responses:
        '200':
          description: –û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

  /api/v1/feedback/session/{session_id}:
    get:
      summary: Get session feedback
      tags: [Feedback]
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –û—Ç–∑—ã–≤—ã –ø–æ —Å–µ—Å—Å–∏–∏

  /api/v1/feedback/stats:
    get:
      summary: Get feedback statistics
      tags: [Feedback]
      responses:
        '200':
          description: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤

  /api/v1/feedback/quality:
    post:
      summary: Submit quality feedback
      tags: [Feedback]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityFeedbackRequest'
      responses:
        '200':
          description: –û—Ç–∑—ã–≤ –æ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

  /api/v1/feedback/analytics:
    get:
      summary: Get feedback analytics
      tags: [Feedback]
      responses:
        '200':
          description: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤

  /api/v1/feedback/trends:
    get:
      summary: Get feedback trends
      tags: [Feedback]
      responses:
        '200':
          description: –¢—Ä–µ–Ω–¥—ã –æ—Ç–∑—ã–≤–æ–≤

  /api/v1/feedback/summary:
    get:
      summary: Get feedback summary
      tags: [Feedback]
      responses:
        '200':
          description: –°–≤–æ–¥–∫–∞ –æ—Ç–∑—ã–≤–æ–≤

  /api/v1/feedback/{feedback_id}:
    delete:
      summary: Delete feedback
      tags: [Feedback]
      parameters:
        - name: feedback_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –û—Ç–∑—ã–≤ —É–¥–∞–ª–µ–Ω

  /api/v1/feedback/export:
    get:
      summary: Export feedback data
      tags: [Feedback]
      responses:
        '200':
          description: –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤

  # ===== LEARNING =====
  /api/v1/learning/feedback:
    post:
      summary: Submit learning feedback
      tags: [Learning]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningFeedbackRequest'
      responses:
        '200':
          description: –û–±—É—á–∞—é—â–∏–π –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

  /api/v1/learning/stats:
    get:
      summary: Get learning statistics
      tags: [Learning]
      responses:
        '200':
          description: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è

  /api/v1/learning/retrain:
    post:
      summary: Trigger model retraining
      tags: [Learning]
      responses:
        '200':
          description: –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ

  /api/v1/learning/examples:
    get:
      summary: Get learning examples
      tags: [Learning]
      responses:
        '200':
          description: –û–±—É—á–∞—é—â–∏–µ –ø—Ä–∏–º–µ—Ä—ã

  # ===== LLM MANAGEMENT =====
  /api/v1/llm/providers:
    get:
      summary: Get LLM providers
      tags: [LLM Management]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤

  /api/v1/llm/health:
    get:
      summary: Check LLM health
      tags: [LLM Management]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤

  /api/v1/llm/usage:
    get:
      summary: Get LLM usage statistics
      tags: [LLM Management]
      responses:
        '200':
          description: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM

  /api/v1/llm/routing-strategy:
    post:
      summary: Set routing strategy
      tags: [LLM Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyRequest'
      responses:
        '200':
          description: –°—Ç—Ä–∞—Ç–µ–≥–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞

  /api/v1/llm/benchmark:
    post:
      summary: Run LLM benchmark
      tags: [LLM Management]
      responses:
        '200':
          description: –ë–µ–Ω—á–º–∞—Ä–∫ LLM –∑–∞–ø—É—â–µ–Ω

  /api/v1/llm/recommendations:
    get:
      summary: Get LLM recommendations
      tags: [LLM Management]
      responses:
        '200':
          description: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ LLM

  /api/v1/llm/test:
    post:
      summary: Test LLM providers
      tags: [LLM Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LLMTestRequest'
      responses:
        '200':
          description: –¢–µ—Å—Ç LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω

  # ===== SEARCH =====
  /api/v1/search:
    post:
      summary: Semantic search
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

  /api/v1/search/history:
    get:
      summary: Get search history
      tags: [Search]
      responses:
        '200':
          description: –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞

  /api/v1/search/suggestions:
    post:
      summary: Get search suggestions
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSuggestionsRequest'
      responses:
        '200':
          description: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞

  /api/v1/search/filters:
    put:
      summary: Update search filters
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFiltersRequest'
      responses:
        '200':
          description: –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã

  /api/v1/search/filters/{filter_id}:
    delete:
      summary: Delete search filter
      tags: [Search]
      parameters:
        - name: filter_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –§–∏–ª—å—Ç—Ä —É–¥–∞–ª–µ–Ω

  /api/v1/search/advanced:
    post:
      summary: Advanced search
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedSearchRequest'
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞

  /api/v1/search/export:
    post:
      summary: Export search results
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchExportRequest'
      responses:
        '200':
          description: –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞

  /api/v1/search/analytics:
    get:
      summary: Get search analytics
      tags: [Search]
      responses:
        '200':
          description: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞

  /api/v1/search/popular:
    get:
      summary: Get popular searches
      tags: [Search]
      responses:
        '200':
          description: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã

  # ===== DOCUMENTS =====
  /api/v1/documents:
    post:
      summary: Create document
      tags: [Data Sources]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
      responses:
        '201':
          description: –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω

  /api/v1/documents/{doc_id}:
    get:
      summary: Get document
      tags: [Data Sources]
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω
    put:
      summary: Update document
      tags: [Data Sources]
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
    delete:
      summary: Delete document
      tags: [Data Sources]
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω

  /api/v1/documents/search:
    post:
      summary: Search documents
      tags: [Data Sources]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSearchRequest'
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

  /api/v1/documents/bulk:
    get:
      summary: Get documents in bulk
      tags: [Data Sources]
      responses:
        '200':
          description: –ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ===== BASIC SCHEMAS =====
    SystemInfo:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        status:
          type: string

    HealthStatus:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string

    # ===== AUTHENTICATION SCHEMAS =====
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required: [username, email, password]

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]

    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string

    UserProfileResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        created_at:
          type: string
        settings:
          type: object

    # ===== USER MANAGEMENT SCHEMAS =====
    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
      required: [username, email]

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string

    UserSettings:
      type: object
      properties:
        language:
          type: string
        theme:
          type: string
        notifications:
          type: boolean

    # ===== CONFIGURATION SCHEMAS =====
    JiraConfigCreate:
      type: object
      properties:
        config_name:
          type: string
        jira_url:
          type: string
        username:
          type: string
        password:
          type: string
      required: [config_name, jira_url, username, password]

    ConfigResponse:
      type: object
      properties:
        id:
          type: integer
        config_name:
          type: string
        jira_url:
          type: string
        status:
          type: string

    # ===== SYNC SCHEMAS =====
    SyncTask:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
        progress_percentage:
          type: integer

    SyncTaskCreate:
      type: object
      properties:
        sources:
          type: array
          items:
            type: string
      required: [sources]

    # ===== GENERATION SCHEMAS =====
    GenerateRequest:
      type: object
      properties:
        topic:
          type: string
        language:
          type: string
      required: [topic]

    GenerateRFCRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        template:
          type: string
      required: [title, description]

    StartSessionRequest:
      type: object
      properties:
        task_type:
          type: string
        initial_request:
          type: string
      required: [task_type, initial_request]

    # ===== AI ENHANCEMENT SCHEMAS =====
    ModelTrainingRequest:
      type: object
      properties:
        training_type:
          type: string
          enum: [full, incremental, multilingual]
        use_feedback:
          type: boolean
          default: true
        epochs:
          type: integer
      required: [training_type]

    ModelTrainingResponse:
      type: object
      properties:
        status:
          type: string
        training_id:
          type: string
        message:
          type: string
        estimated_duration_minutes:
          type: integer

    RFCQualityAnalysisRequest:
      type: object
      properties:
        rfc_content:
          type: string
        rfc_title:
          type: string
      required: [rfc_content]

    RFCQualityAnalysisResponse:
      type: object
      properties:
        overall_score:
          type: number
        structure_score:
          type: number
        completeness_score:
          type: number
        technical_depth_score:
          type: number
        clarity_score:
          type: number
        improvement_suggestions:
          type: array
          items:
            type: string
        missing_sections:
          type: array
          items:
            type: string
        weak_areas:
          type: array
          items:
            type: string

    SearchOptimizationRequest:
      type: object
      properties:
        test_queries:
          type: array
          items:
            type: string
        optimization_type:
          type: string
          enum: [performance, quality, full]
          default: full

    SearchOptimizationResponse:
      type: object
      properties:
        performance_metrics:
          type: object
        optimization_recommendations:
          type: array
          items:
            type: object
        cache_statistics:
          type: object
        improvement_summary:
          type: string

    # ===== SEARCH SCHEMAS =====
    SearchRequest:
      type: object
      properties:
        query:
          type: string
        language:
          type: string
      required: [query]

    VectorSearchRequest:
      type: object
      properties:
        query:
          type: string
        collections:
          type: array
          items:
            type: string
        limit:
          type: integer
          default: 10
        filters:
          type: object
        include_snippets:
          type: boolean
          default: true
        hybrid_search:
          type: boolean
          default: true
      required: [query]

    VectorSearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        total_results:
          type: integer
        search_time_ms:
          type: number
        collections_searched:
          type: array
          items:
            type: string

    SearchResult:
      type: object
      properties:
        doc_id:
          type: string
        title:
          type: string
        content:
          type: string
        score:
          type: number
        source:
          type: string
        source_type:
          type: string
        url:
          type: string
        highlights:
          type: array
          items:
            type: string

    SearchSuggestionsRequest:
      type: object
      properties:
        partial_query:
          type: string
      required: [partial_query]

    SearchFiltersRequest:
      type: object
      properties:
        filters:
          type: object

    AdvancedSearchRequest:
      type: object
      properties:
        query:
          type: string
        filters:
          type: object
        sort_by:
          type: string
        date_range:
          type: object
      required: [query]

    SearchExportRequest:
      type: object
      properties:
        query:
          type: string
        format:
          type: string
          enum: [json, csv, xlsx]
      required: [query, format]

    # ===== DOCUMENT SCHEMAS =====
    IndexDocumentRequest:
      type: object
      properties:
        content:
          type: string
        metadata:
          type: object
      required: [content]

    CreateDocumentRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        source_type:
          type: string
      required: [title, content]

    UpdateDocumentRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string

    DocumentSearchRequest:
      type: object
      properties:
        query:
          type: string
        filters:
          type: object
      required: [query]

    # ===== DOCUMENTATION SCHEMAS =====
    CodeAnalysisRequest:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
      required: [code, language]

    DocumentationGenerateRequest:
      type: object
      properties:
        project_id:
          type: string
        doc_type:
          type: string
      required: [project_id, doc_type]

    # ===== FEEDBACK SCHEMAS =====
    FeedbackRequest:
      type: object
      properties:
        session_id:
          type: string
        rating:
          type: integer
        comment:
          type: string
      required: [session_id, rating]

    QualityFeedbackRequest:
      type: object
      properties:
        rfc_id:
          type: string
        quality_score:
          type: number
        feedback_text:
          type: string
      required: [rfc_id, quality_score]

    LearningFeedbackRequest:
      type: object
      properties:
        session_id:
          type: string
        feedback_type:
          type: string
        rating:
          type: integer
      required: [session_id, feedback_type]

    # ===== LLM MANAGEMENT SCHEMAS =====
    RoutingStrategyRequest:
      type: object
      properties:
        strategy:
          type: string
          enum: [round_robin, cost_optimized, performance_optimized, balanced, quality_first, fallback_chain]
      required: [strategy]

    LLMTestRequest:
      type: object
      properties:
        providers:
          type: array
          items:
            type: string
        test_prompt:
          type: string
      required: [providers]
